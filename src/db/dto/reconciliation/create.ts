import { reconciliation } from "@/db/schema";
import { autoGeneratedColumns } from "@/db/utils/shared";
import { createInsertSchema } from "drizzle-zod";
import { z } from "zod";

export const insertReconciliationSchema =
  createInsertSchema(reconciliation).omit(autoGeneratedColumns);

export const reconciliationInputSchema = z.object({
  date: z
    .string()
    .refine((date) => !Number.isNaN(Date.parse(date)), "Invalid date format"),
  balance: z
    .string()
    .refine(
      (val) => !Number.isNaN(Number.parseFloat(val)),
      "Balance must be a valid number",
    ),
  notes: z.string().nullable().optional(),
});

export const createReconciliationSchema = reconciliationInputSchema;
export const updateReconciliationSchema = reconciliationInputSchema.partial();

export type CreateReconciliationDto = z.infer<
  typeof createReconciliationSchema
>;
export type UpdateReconciliationDto = z.infer<
  typeof updateReconciliationSchema
>;
