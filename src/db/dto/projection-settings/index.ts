// src/db/dto/projection-settings.ts
import { projectionSettings } from "@/db/schema";
import { autoGeneratedColumns } from "@/db/utils/shared";
import { createInsertSchema, createSelectSchema } from "drizzle-zod";
import { z } from "zod";

// Schema for inserting new projection settings (used for Drizzle-Zod)
export const insertProjectionSettingsSchema =
  createInsertSchema(projectionSettings).omit(autoGeneratedColumns);

// Input schema for creating/updating projection settings from the API
export const projectionSettingsInputSchema = z.object({
  defaultDaysToProject: z.number().int().min(1).optional(),
  includePendingTransactions: z.boolean().optional(),
  includeRecurringTransactions: z.boolean().optional(),
});

// DTO for creating projection settings (from client to API)
export type CreateProjectionSettingsDto = z.infer<
  typeof projectionSettingsInputSchema
>;

// DTO for updating projection settings (from client to API)
export type UpdateProjectionSettingsDto = z.infer<
  typeof projectionSettingsInputSchema
>;

// Schema for selecting projection settings (used for Drizzle-Zod)
export const selectProjectionSettingsSchema =
  createSelectSchema(projectionSettings);

// DTO for reading projection settings (from API to client)
export type ProjectionSettingsDto = z.infer<
  typeof selectProjectionSettingsSchema
>;
